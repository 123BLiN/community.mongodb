- name: Ensure tests home exists
  file:
    path: '{{ remote_tmp_dir }}/tests'
    state: directory

- include_tasks: mongod_teardown.yml

- set_fact:
    current_replicaset: '{{ mongodb_replicaset1 }}'

- set_fact:
    mongod_auth: true

- name: Execute mongod script to restart with auth enabled
  include_tasks: mongod_replicaset.yml

- name: Create replicaset
  community.mongodb.mongodb_replicaset:
    login_host: localhost
    login_port: 3001
    login_database: admin
    replica_set: '{{ mongodb_replicaset1 }}'
    election_timeout_millis: 1000
    members:
    - localhost:3001
    - localhost:3002
    - localhost:3003
  register: mongodb_replicaset

- name: Add mongodb admin user
  community.mongodb.mongodb_user:
    login_host: localhost
    login_port: 3001
    replica_set: '{{ mongodb_replicaset1 }}'
    database: admin
    name: '{{ mongodb_admin_user }}'
    password: '{{ mongodb_admin_password }}'
    roles:
      - root
    state: present

- name: Run the listDatabases cmd
  community.mongodb.mongodb_shell:
    login_user: '{{ mongodb_admin_user }}'
    login_password: '{{ mongodb_admin_password }}'
    login_port: 3001
    eval: "db.adminCommand('listDatabases')"
    debug: yes
  register: listDatabases

- assert:
    that:
      - "'databases' in listDatabases['transformed_output']"
      - "'totalSize' in listDatabases['transformed_output']"

- debug:
    var: listDatabases

- name: List collections
  community.mongodb.mongodb_shell:
    login_user: '{{ mongodb_admin_user }}'
    login_password: '{{ mongodb_admin_password }}'
    login_port: 3001
    eval: "db.adminCommand('listCollections')"
    debug: yes
  register: listCollections

- debug:
    var: listCollections  # TODO Fix this jsob parsing result

- name: Get log types
  community.mongodb.mongodb_shell:
    login_user: '{{ mongodb_admin_user }}'
    login_password: '{{ mongodb_admin_password }}'
    login_port: 3001
    eval: "db.adminCommand({ 'getLog' : '*' })"
    debug: yes
  register: getLog

- assert:
    that:
      - "'global' in getLog['transformed_output']['names']"
      - "'startupWarnings' in getLog['transformed_output']['names']"

- debug:
    var: getLog

- name: Get log startupWarnings
  community.mongodb.mongodb_shell:
    login_user: '{{ mongodb_admin_user }}'
    login_password: '{{ mongodb_admin_password }}'
    login_port: 3001
    eval: "db.adminCommand({ 'getLog' : 'startupWarnings' })"
    debug: yes
  register: getLogstartupWarnings

- assert:
    that:
      - "'log' in getLogstartupWarnings['transformed_output']"
      - "'initandlisten' in getLogstartupWarnings['transformed_output'] | string"
      - "getLogstartupWarnings['transformed_output']['totalLinesWritten'] > 0"

- debug:
    var: getLogstartupWarnings

- name: Show roles
  community.mongodb.mongodb_shell:
    login_user: '{{ mongodb_admin_user }}'
    login_password: '{{ mongodb_admin_password }}'
    login_port: 3001
    eval: "db.getRoles({showBuiltinRoles: true})"
    debug: yes
  register: showRoles

- assert:
    that:
      - "showRoles['transformed_output'] is iterable"
      - "'inheritedRoles' in showRoles['transformed_output'] | string"

- debug:
    var: showRoles

- name: Run an unsupported shell helper cmd
  community.mongodb.mongodb_shell:
    login_user: '{{ mongodb_admin_user }}'
    login_password: '{{ mongodb_admin_password }}'
    login_port: 3001
    eval: "show dbs"
    debug: yes
  register: bad_cmd
  ignore_errors: yes

- assert:
    that:
      - "bad_cmd.failed"
      - "'the eval parameter because they are not valid JavaScript' in bad_cmd.msg"

- include_tasks: mongod_teardown.yml
